{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-chronoblog/src/content-bottom.mdx","webpack:///./node_modules/gatsby-theme-chronoblog/src/components/note/note.js","webpack:///./node_modules/gatsby-theme-chronoblog/src/templates/note.js"],"names":["makeShortcode","name","props","console","warn","FeedSearch","Tags","FeedItems","layoutProps","_frontmatter","MDXContent","components","mdxType","isMDXComponent","Note","data","description","mdx","excerpt","title","frontmatter","slug","fields","limit","showMoreButton","skipThisPageItem","yearSeparator","filter","item"],"mappings":"iLASMA,G,UAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,oBAASC,MAGZG,EAAaL,EAAc,cAC3BM,EAAON,EAAc,QACrBO,EAAYP,EAAc,aAC1BQ,EAAc,CAClBC,aAX0B,IAcb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,cALS,UAKT,eAAeM,EAAiBN,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAC5E,yBACA,cAACP,EAAD,CAAYO,QAAQ,eACpB,cAACN,EAAD,CAAMM,QAAQ,SACd,cAACL,EAAD,CAAWK,QAAQ,eAKvBF,EAAWG,gBAAiB,G,yGCGbC,G,UA3BK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACfC,EAAcD,EAAKE,IAAIC,SAAW,GAExC,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CACEC,MAAOJ,EAAKE,IAAIG,YAAYD,MAC5BE,KAAMN,EAAKE,IAAIK,OAAOD,KACtBL,YAAaA,IAEf,wBACE,YAAC,IAAD,CACEO,MAAO,EACPC,gBAAgB,EAChBC,kBAAkB,EAClBC,eAAe,EAEfC,OAAQ,SAACC,GAAD,OAAUA,EAAKN,OAAOD,OAASN,EAAKE,IAAIK,OAAOD,SAG3D,yBACE,YAAC,IAAD,UC3BOP","file":"component---node-modules-gatsby-theme-chronoblog-src-templates-note-js-3e68642954b46a2859f9.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst FeedSearch = makeShortcode(\"FeedSearch\");\nconst Tags = makeShortcode(\"Tags\");\nconst FeedItems = makeShortcode(\"FeedItems\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <hr />\n    <FeedSearch mdxType=\"FeedSearch\" />\n    <Tags mdxType=\"Tags\" />\n    <FeedItems mdxType=\"FeedItems\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from 'theme-ui';\n\n// @ts-ignore\nimport ContentBottomMdx from '../../content-bottom.mdx';\n// @ts-ignore\nimport FeedItems from '../feed-items';\nimport Layout from '../layout';\nimport SEO from '../seo';\n\nexport const Note = ({ data }) => {\n  const description = data.mdx.excerpt || '';\n  //\n  return (\n    <Layout>\n      <SEO\n        title={data.mdx.frontmatter.title}\n        slug={data.mdx.fields.slug}\n        description={description}\n      />\n      <main>\n        <FeedItems\n          limit={1}\n          showMoreButton={false}\n          skipThisPageItem={false}\n          yearSeparator={false}\n          // filter by slug - get only with this slug\n          filter={(item) => item.fields.slug === data.mdx.fields.slug}\n        />\n      </main>\n      <aside>\n        <ContentBottomMdx />\n      </aside>\n    </Layout>\n  );\n};\n\nexport default Note;\n","import { graphql } from 'gatsby';\n\nimport Note from '../components/note';\n\nexport default Note;\n\nexport const noteQuery = graphql`\n  query($id: String!) {\n    mdx(id: { eq: $id }) {\n      id\n      excerpt\n      frontmatter {\n        title\n        date\n        tags\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 768, quality: 90) {\n              ...GatsbyImageSharpFluid_withWebp\n              presentationWidth\n              presentationHeight\n              src\n            }\n            resize(width: 768) {\n              src\n            }\n          }\n        }\n      }\n      fields {\n        slug\n      }\n      body\n    }\n  }\n`;\n"],"sourceRoot":""}