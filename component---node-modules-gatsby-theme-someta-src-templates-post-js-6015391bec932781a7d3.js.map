{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-someta/src/content-bottom.mdx","webpack:///./src/gatsby-theme-someta/post-footer.mdx","webpack:///./src/gatsby-theme-someta/components/post/index.jsx","webpack:///./node_modules/gatsby-theme-someta/src/templates/post.js"],"names":["makeShortcode","name","props","console","warn","FeedSearch","Tags","FeedItems","layoutProps","_frontmatter","MDXContent","components","mdxType","isMDXComponent","AuthorBanner","PostTitle","frontmatter","data","mdx","title","h1","PostContent","body","px","PostFooter","siteMetadata","useSiteMetadata","sx","mt","mb","PostFooterMdx","Post","fromFrontmatter","fromExcerpt","description","excerpt","imagePath","get","postInfoStyles","zIndex","color","fontSize","fontFamily","textAlign","padding","ml","flexShrink","slug","fields","image","canonical","position","p","backgroundColor","opacity","width","type","tags","tagStyle","showStatsNumber","date","marginTop","CommentsBlock","pathName","postTitle","postId","id","postQuery"],"mappings":"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","file":"component---node-modules-gatsby-theme-someta-src-templates-post-js-6015391bec932781a7d3.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst FeedSearch = makeShortcode(\"FeedSearch\");\nconst Tags = makeShortcode(\"Tags\");\nconst FeedItems = makeShortcode(\"FeedItems\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <hr />\n    <FeedSearch mdxType=\"FeedSearch\" />\n    <Tags mdxType=\"Tags\" />\n    <FeedItems mdxType=\"FeedItems\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst AuthorBanner = makeShortcode(\"AuthorBanner\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <AuthorBanner mdxType=\"AuthorBanner\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport get from 'lodash/get';\nimport { jsx, Styled } from 'theme-ui';\nimport { Flex, Box } from '@theme-ui/components';\nimport ContentBottomMdx from 'gatsby-theme-someta/src/content-bottom.mdx';\nimport useSiteMetadata from 'gatsby-theme-someta/src/hooks/use-site-metadata';\nimport CoverImage from 'gatsby-theme-someta/src/components/cover-image';\nimport Date from 'gatsby-theme-someta/src/components/date';\nimport Layout from 'gatsby-theme-someta/src/components/layout';\nimport SEO from 'gatsby-theme-someta/src/components/seo';\nimport Tags from 'gatsby-theme-someta/src/components/tags';\nimport CommentsBlock from 'components/CommentsBlock';\nimport PostFooterMdx from 'gatsby-theme-someta/post-footer';\n\nconst PostTitle = ({\n  data: {\n    mdx: { frontmatter }\n  }\n}) => {\n  return (\n    <div>\n      {frontmatter.title ? (\n        <Styled.h1>{frontmatter.title}</Styled.h1>\n      ) : (\n          ''\n        )\n      }\n    </div >\n  );\n};\n\nconst PostContent = ({\n  data: {\n    mdx: { body }\n  }\n}) => (\n    <Box px={[0]}>\n      <MDXRenderer>{body}</MDXRenderer>\n    </Box>\n  )\n\n/* eslint-disable complexity */\nconst getDescriptionForSeo = (fromFrontmatter, fromExcerpt) => {\n  if (fromFrontmatter && fromFrontmatter !== '') return fromFrontmatter;\n  if (fromExcerpt && fromExcerpt !== '') return fromExcerpt;\n\n  return '';\n};\n\nconst PostFooter = () => {\n  const siteMetadata = useSiteMetadata();\n\n  return (\n    <div sx={{ mt: '32px', mb: '32px' }}>\n      {PostFooterMdx && PostFooterMdx !== '' ? (\n        <PostFooterMdx siteMetadata={siteMetadata} />\n      ) : (\n          ''\n        )}\n    </div>\n  );\n};\n\nexport const Post = ({ data }) => {\n  const description = getDescriptionForSeo(\n    data.mdx.frontmatter.description,\n    data.mdx.excerpt\n  );\n  const imagePath = get(\n    data,\n    'mdx.frontmatter.cover.childImageSharp.fluid.src',\n    ''\n  );\n  const postInfoStyles = {\n    zIndex: 1,\n    color: 'background',\n    fontSize: [0, 1],\n    fontFamily: 'monospace',\n    textAlign: ['left', 'right'],\n    padding: [1, 2],\n    ml: 'auto',\n    flexShrink: 0,\n  }\n\n  //\n  return (\n    <Layout>\n      <SEO\n        title={data.mdx.frontmatter.title}\n        slug={data.mdx.fields.slug}\n        description={description}\n        image={imagePath}\n        canonical={data.mdx.fields.slug}\n      />\n\n      <main>\n        <article>\n          <header sx={{ position: \"relative\" }}>\n            <Flex sx={{\n              zIndex: 1, position: \"absolute\", p: [0, 1], backgroundColor: ['text'], opacity: 0.66, width: \"100%\"\n            }}>\n              <Tags\n                type=\"item\"\n                tags={data.mdx.frontmatter.tags}\n                tagStyle={postInfoStyles}\n                showStatsNumber={false}\n              />\n              <Date\n                date={data.mdx.frontmatter.date}\n                sx={postInfoStyles}\n              />\n            </Flex>\n\n            <CoverImage data={data.mdx} type=\"post\" />\n            <PostTitle px={[3, 0]} data={data} />\n          </header>\n\n          <PostContent data={data} />\n\n          <footer sx={{ marginTop: '16px' }}>\n            <PostFooter />\n            <CommentsBlock\n              pathName={data.mdx.fields.slug}\n              postTitle={data.mdx.frontmatter.title}\n              postId={data.mdx.id}\n            />\n          </footer>\n        </article>\n      </main>\n\n      <aside>\n        <ContentBottomMdx />\n      </aside>\n    </Layout>\n  );\n};\n\nexport default Post;\n","import { graphql } from 'gatsby';\n\nimport Post from '../components/post';\n\nexport default Post;\n\nexport const postQuery = graphql`\n  query($id: String!) {\n    mdx(id: { eq: $id }) {\n      id\n      excerpt\n      frontmatter {\n        title\n        date\n        description\n        tags\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 768, quality: 90) {\n              ...GatsbyImageSharpFluid_withWebp\n              presentationWidth\n              presentationHeight\n              src\n            }\n            resize(width: 768) {\n              src\n            }\n          }\n        }\n      }\n      fields {\n        slug\n      }\n      body\n    }\n  }\n`;\n"],"sourceRoot":""}