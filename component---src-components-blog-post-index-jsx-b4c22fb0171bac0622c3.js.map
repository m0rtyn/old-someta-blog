{"version":3,"sources":["webpack:///./src/components/blog-post/index.jsx","webpack:///./src/components/blog-item/blog-item-date.jsx","webpack:///./src/components/blog-item/blog-item-tags.jsx","webpack:///./src/components/blog-item/utils.js","webpack:///./src/components/PromoBanner.jsx","webpack:///./src/gatsby-theme-chronoblog/post-footer.mdx","webpack:///./node_modules/react-uid/dist/es2015/uid.js"],"names":["FirstTitle","Styled","h1","PostFooter","siteMetadata","useSiteMetadata","sx","my","PostFooterMdx","BlogPostPage","data","posts","name","tags","html","url","slug","desc","cover_image","publish_date","coverImageURL","parseNotionImageUrl","postDate","startDate","title","description","image","canonical","position","date","dangerouslySetInnerHTML","__html","marginTop","pathName","postTitle","postId","Date","display","right","top","m","color","backgroundColor","borderRadius","px","tagStyles","padding","marginRight","Tags","length","tagsStrings","map","el","margin","t","key","uid","width","rUrl","startsWith","parsedOriginUrl","split","NOTION_BASE_URL","encodeURIComponent","replace","rSlug","slice","PromoBanner","mb","bg","boxShadow","border","justifyContent","alignItems","mr","fontSize","href","target","rel","layoutProps","_frontmatter","MDXContent","components","props","mdxType","isMDXComponent","counter","WeakMap","item","index","has","get","set"],"mappings":"8FAAA,uHAcYA,GAdZ,oBAc2BC,IAAnBC,IAEFC,EAAa,WACjB,IAAMC,EAAeC,cAErB,OACE,mBAAKC,GAAI,CAAEC,GAAI,CAAC,KACbC,KAAmC,KAAlBA,IAChB,YAAC,IAAD,CAAeJ,aAAcA,IAE7B,KA+DOK,UAzDM,SAAC,GAAc,IAAD,IAAXC,KAEpBC,MACEC,EAH6B,EAG7BA,KACAC,EAJ6B,EAI7BA,KACAC,EAL6B,EAK7BA,KACAC,EAN6B,EAM7BA,IACAC,EAP6B,EAO7BA,KACAC,EAR6B,EAQ7BA,KACAC,EAT6B,EAS7BA,YACAC,EAV6B,EAU7BA,aAIEC,EACJF,GAAeG,YAAoBH,EAAY,GAAI,IAAKF,GAEpDM,EAAWH,aAAH,EAAGA,EAAcI,UAE/B,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CACEC,MAAOZ,EACPI,KAAMD,EACNU,YAAaR,EACbS,MAAON,GAAiB,GACxBO,UAAWZ,IAGb,wBACE,2BACE,sBAAQT,GAAI,CAAEsB,SAAU,aACtB,YAAC,IAAD,CAAMf,KAAMA,IACZ,YAAC,IAAD,CAAMgB,KAAMP,KAKd,YAACtB,EAAD,KAAaY,GAEb,mBAAKkB,wBAAyB,CAAEC,OAAQjB,KAExC,sBAAQR,GAAI,CAAE0B,UAAW,SACvB,YAAC7B,EAAD,MACA,YAAC,IAAD,CACE8B,SAAQ,IAAMlB,EACdmB,UAAWtB,EAEXuB,OAAQnB,U,oCC9EtB,kDAGaoB,GAHb,UAGoB,SAAC,GAAc,IAAZP,EAAW,EAAXA,KACrB,OAAKA,EAGH,oBACEvB,GAAI,CACFsB,SAAU,WACVS,QAAS,eACTC,MAAO,EACPC,IAAK,EACLC,EAAG,EACHC,MAAO,QACPC,gBAAiB,QACjBC,aAAc,OACdC,GAAI,IAGLf,GAhBa,Q,oCCJpB,8DAIMgB,GAJN,UAIkB,CAChBR,QAAS,eACTS,QAAS,CAAC,GACVC,YAAa,CAAC,KAGHC,EAAO,SAAC,GAAc,IAAZnC,EAAW,EAAXA,KACrB,IAAKA,GAAwB,IAAhBA,EAAKoC,OAAc,OAAO,KACvC,IAAMC,EAAcrC,GAAQA,EAAKsC,KAAI,SAAAC,GAAE,UAAQA,KAE/C,OACE,mBACE9C,GAAI,CACF+C,OAAQ,UAGTH,EAAYC,KAAI,SAAAG,GACf,IAAMC,EAAMC,YAAIF,GAEhB,OACE,oBAAMC,IAAKA,EAAKjD,GAAIuC,GACjBS,S,oCCzBb,sCAEajC,EAAsB,SAACN,EAAK0C,EAAOzC,GAC9C,IAAI0C,EAEJ,GAAI3C,EAAI4C,WAAW,cAAe,CAAC,IAC1BC,EAAmB7C,EAAI8C,MAAM,KADJ,GAGhCH,EAAUI,+BAAyBC,mBACjCH,GACAI,QAAQ,aAAc,mBAExBN,EADS3C,EAAI4C,WAAW,UAXJ,wBAYQ5C,EAErBA,EAGT,IAAMkD,EAAWjD,EAAKkD,MAAM,EAAG,GAApB,IAA0BlD,EAAKkD,MACxC,EACA,IAFS,IAGNlD,EAAKkD,MAAM,GAAI,IAHT,IAGgBlD,EAAKkD,MAAM,GAAI,IAH/B,IAGsClD,EAAKkD,MACpD,GACA,IAGF,OAAIT,EACQC,EAAV,UAAwBD,EAAxB,mBAAgDQ,EAG3CP,I,4JCgCMS,G,UAvDK,WAClB,OACE,YAAC,IAAD,CACE7D,GAAI,CACF8D,GAAI,MACJC,GAAI,cACJC,UAAW,UACXC,OAAQ,iCAGV,YAAC,IAAD,CACEjE,GAAI,CACF+B,QAAS,OACTmC,eAAgB,SAChBC,WAAY,SACZ7B,GAAI,EACJJ,EAAG,EACHG,aAAc,MAGhB,kBAAIrC,GAAI,CAAEoE,GAAI,EAAGC,SAAU,IAA3B,yBACA,kBAAIrE,GAAI,CAAEqE,SAAU,IAClB,sBACE,YAAC,IAAD,CACEC,KAAK,0BACLC,OAAO,SACPC,IAAI,uBAHN,sBAQF,sBACE,YAAC,IAAD,CACEF,KAAK,wBACLC,OAAO,SACPC,IAAI,uBAHN,YAQF,sBACE,YAAC,IAAD,CACEF,KAAK,8BACLC,OAAO,SACPC,IAAI,uBAHN,aCrCNC,EAAc,CAClBC,aAF0B,IAKb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cALS,UAKT,eAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,cAAC,EAAD,CAAaA,QAAQ,iBAKzBH,EAAWI,gBAAiB,G,yDCzB5B,kCASO,IACDC,EACAnC,EAkCKK,GAnCL8B,EAAU,EACVnC,EAAM,IAAIoC,QAKJ,SAAS/B,EAAIgC,EAAMC,GAC3B,MAAoB,iBAATD,GAAqC,iBAATA,EAC9BC,EAAQ,OAASA,EAAQ,OAASD,EAGtCrC,EAAIuC,IAAIF,GAKN,MAAQrC,EAAIwC,IAAIH,IAJrBrC,EAAIyC,IAAIJ,EAAMF,KACP9B,EAAIgC","file":"component---src-components-blog-post-index-jsx-b4c22fb0171bac0622c3.js","sourcesContent":["/** @jsx jsx */\n\nimport { jsx, Styled } from 'theme-ui';\nimport { graphql } from 'gatsby';\nimport Layout from 'gatsby-theme-chronoblog/src/components/layout';\nimport SEO from 'gatsby-theme-chronoblog/src/components/seo';\nimport CommentsBlock from 'components/CommentsBlock';\nimport useSiteMetadata from 'gatsby-theme-chronoblog/src/hooks/use-site-metadata';\nimport PostFooterMdx from 'gatsby-theme-chronoblog/post-footer';\nimport { parseNotionImageUrl } from 'components/blog-item/utils';\nimport { Date } from 'components/blog-item/blog-item-date';\nimport { Tags } from 'components/blog-item/blog-item-tags';\nimport './styles.css';\n\nconst { h1: FirstTitle } = Styled;\n\nconst PostFooter = () => {\n  const siteMetadata = useSiteMetadata();\n\n  return (\n    <div sx={{ my: [4] }}>\n      {PostFooterMdx && PostFooterMdx !== '' ? (\n        <PostFooterMdx siteMetadata={siteMetadata} />\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n\nconst BlogPostPage = ({ data }) => {\n  const {\n    posts: {\n      name,\n      tags,\n      html,\n      url,\n      slug,\n      desc,\n      cover_image,\n      publish_date\n    }\n  } = data;\n\n  const coverImageURL =\n    cover_image && parseNotionImageUrl(cover_image[0], 400, slug);\n\n  const postDate = publish_date?.startDate;\n\n  return (\n    <Layout>\n      <SEO\n        title={name}\n        slug={url}\n        description={desc}\n        image={coverImageURL || ''}\n        canonical={url}\n      />\n\n      <main>\n        <article>\n          <header sx={{ position: 'relative' }}>\n            <Tags tags={tags} />\n            <Date date={postDate} />\n\n            {/* <CoverImage data={data.mdx} type=\"post\" /> */}\n          </header>\n\n          <FirstTitle>{name}</FirstTitle>\n          {/* eslint-disable-next-line react/no-danger */}\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n\n          <footer sx={{ marginTop: '16px' }}>\n            <PostFooter />\n            <CommentsBlock\n              pathName={`/${url}`}\n              postTitle={name}\n              // postId={data.mdx.id}\n              postId={slug}\n            />\n          </footer>\n        </article>\n      </main>\n    </Layout>\n  );\n};\n\nexport default BlogPostPage;\n\nexport const query = graphql`\n  query($slug: String) {\n    posts(slug: { eq: $slug }) {\n      html\n      name\n      tags\n      url\n      cover_image\n      desc\n      slug\n      publish_date {\n        startDate(formatString: \"DD MMM YYYY\", fromNow: false)\n      }\n    }\n  }\n`;\n","/** @jsx jsx */\nimport { jsx, Styled } from 'theme-ui';\n\nexport const Date = ({ date }) => {\n  if (!date) return null;\n\n  return (\n    <span\n      sx={{\n        position: 'absolute',\n        display: 'inline-block',\n        right: 0,\n        top: 0,\n        m: 2,\n        color: '#000a',\n        backgroundColor: '#fffa',\n        borderRadius: 'card',\n        px: 1\n      }}\n    >\n      {date}\n    </span>\n  );\n};\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui';\nimport { uid } from 'react-uid';\n\nconst tagStyles = {\n  display: 'inline-block',\n  padding: [1],\n  marginRight: [2]\n};\n\nexport const Tags = ({ tags }) => {\n  if (!tags || tags.length === 0) return null;\n  const tagsStrings = tags && tags.map(el => `#${el}`);\n\n  return (\n    <div\n      sx={{\n        margin: '1em 0'\n      }}\n    >\n      {tagsStrings.map(t => {\n        const key = uid(t);\n\n        return (\n          <span key={key} sx={tagStyles}>\n            {t}\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n","const NOTION_BASE_URL = 'https://www.notion.so';\n\nexport const parseNotionImageUrl = (url, width, slug) => {\n  let rUrl;\n\n  if (url.startsWith('https://s3')) {\n    const [parsedOriginUrl] = url.split('?');\n\n    rUrl = `${NOTION_BASE_URL}/image/${encodeURIComponent(\n      parsedOriginUrl\n    ).replace('s3.us-west', 's3-us-west')}`;\n  } else if (url.startsWith('/image')) {\n    rUrl = `${NOTION_BASE_URL}${url}`;\n  } else {\n    rUrl = url;\n  }\n\n  const rSlug = `${slug.slice(0, 8)}-${slug.slice(\n    8,\n    12\n  )}-${slug.slice(12, 16)}-${slug.slice(16, 20)}-${slug.slice(\n    20,\n    32\n  )}`;\n\n  if (width) {\n    return `${rUrl}?width=${width}&table=block&id=${rSlug}`;\n  }\n\n  return rUrl;\n};\n","/** @jsx jsx */\n\nimport { jsx } from 'theme-ui';\nimport { Box, Link as LinkUI } from '@theme-ui/components';\nimport AuthorBanner from 'gatsby-theme-chronoblog/components/author-banner.jsx';\n\nconst PromoBanner = () => {\n  return (\n    <AuthorBanner\n      sx={{\n        mb: '8px',\n        bg: 'transparent',\n        boxShadow: 'initial',\n        border: '13px solid var(--color-dark)'\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          px: 4,\n          m: 2,\n          borderRadius: '0'\n        }}\n      >\n        <h3 sx={{ mr: 4, fontSize: 4 }}>Ты можешь подписаться</h3>\n        <ul sx={{ fontSize: 3 }}>\n          <li>\n            <LinkUI\n              href=\"https://t.me/sometachat\"\n              target=\"_blank\"\n              rel=\"norefferer noopener\"\n            >\n              Канал в Телеграме\n            </LinkUI>\n          </li>\n          <li>\n            <LinkUI\n              href=\"https://t.me/metabaza\"\n              target=\"_blank\"\n              rel=\"norefferer noopener\"\n            >\n              Наш чат\n            </LinkUI>\n          </li>\n          <li>\n            <LinkUI\n              href=\"https://someta.site/rss.xml\"\n              target=\"_blank\"\n              rel=\"norefferer noopener\"\n            >\n              РСС\n            </LinkUI>\n          </li>\n        </ul>\n      </Box>\n    </AuthorBanner>\n  );\n};\n\nexport default PromoBanner;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { jsx } from 'theme-ui';\nimport PromoBanner from 'components/PromoBanner';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <PromoBanner mdxType=\"PromoBanner\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/**\n * generates a UID factory\n * @internal\n * @example\n * const uid = generateUID();\n * uid(object) = 1;\n * uid(object) = 1;\n * uid(anotherObject) = 2;\n */\nexport var generateUID = function generateUID() {\n  var counter = 1;\n  var map = new WeakMap();\n  /**\n   * @borrows {uid}\n   */\n\n  var uid = function uid(item, index) {\n    if (typeof item === 'number' || typeof item === 'string') {\n      return index ? \"idx-\" + index : \"val-\" + item;\n    }\n\n    if (!map.has(item)) {\n      map.set(item, counter++);\n      return uid(item);\n    }\n\n    return 'uid' + map.get(item);\n  };\n\n  return uid;\n};\n/**\n * @name uid\n * returns an UID associated with {item}\n * @param {Object} item - object to generate UID for\n * @param {Number} index, a fallback index\n * @example\n * uid(object) == 1;\n * uid(object) == 1;\n * uid(anotherObject) == 2;\n * uid(\"not object\", 42) == 42\n *\n * @see {@link useUID}\n */\n\nexport var uid = generateUID();"],"sourceRoot":""}